0.0005^2*pi
(5e-2)^2
(5e-2)^2*pi
(0.5e-3)^2*pi
(7e-3)^2*pi
4.75^2*pi
10.3/70.9
sqrt(9.5^2 - 9^2)
7/70.9
4.7 / (1.5^2*pi)
9.7/70.9
8/70.9
10.5/70.9
3.1uW / (1.5mm^2*pi)
3.1 / (1.5^2*pi)
3.1 / (1^2*pi)
2757/3
tmp = read.csv('~/Downloads/tmp.csv')
getwd()
tmp = read.csv('../Downloads/tmp.csv')
str(tmp)
tmp = read.csv('../Downloads/tmp.csv', header=F)
str(tmp)
library(stringr)
str_split_fixed(tmp[,1], 2, sep='_VS_')
str_split_fixed(tmp[,1], 2, '_VS_')
str_split_fixed(tmp[,1], '_VS_', 2)
tmp2 = str_split_fixed(tmp[,1], '_VS_', 2)
unique(tmp2)
unique(tmp2) %>% length
str(tmp2)
unique(tmp2[,1]) %>% length
unique(tmp2[,2]) %>% length
str(as.matrix(tmp2))
str(as.vector(as.matrix(tmp2)))
length(unique(as.vector(as.matrix(tmp2))))
install.packages("svglite")
library("svglite")
ToothGrowth  = data.frame(len=1:10, supp = 2:11, does=3:12)
library(ggplot2)
library(svglite)
ScatterPlotImage<-ggplot(ToothGrowth,aes(len,dose))+geom_point(size=3)
ScatterPlotImage
ToothGrowth  = data.frame(len=1:10, supp = 2:11, dose=3:12)
library(ggplot2)
library(svglite)
ScatterPlotImage<-ggplot(ToothGrowth,aes(len,dose))+geom_point(size=3)
ScatterPlotImage
pwd()
getwd()
ggsave(file="Scatter.svg", plot=ScatterPlotImage, width=10, height=10)
0.455/0.368
0.455 / 0.176
0.416/ 0.318
library(gridExtra)
source('./init.R')
setwd("F:\file\github\puff_to_visual_aversion\behavior\data_analysis/others/virtual_octant/")
setwd("F:/file/github/puff_to_visual_aversion/behavior/data_analysis/others/virtual_octant/")
source('./init.R')
source('./calc_indices.R')
#######################
# params
#######################
root = 'F:/file/behavior/data/'
mydir = 'CS_virtualoctant_puff/'
mypath = paste0(root, mydir, 'ballrecordings/')
parallel=T
###################
### assemble all the csv files
myfiles = list.files(path=mypath, pattern='.csv$')
myfiles = paste0(mypath, myfiles[-grep('CALIB',myfiles)])
mydf_all = NULL
if(parallel){
cl = makeCluster(numCores, type="FORK")
registerDoParallel(cl)
mydf_all =
foreach(i=1:length(myfiles), .export=ls(.GlobalEnv)) %dopar% {
print(i)
preprocess(myfiles[i])
}
stopCluster(cl)
mydf_all = do.call("rbind", mydf_all)
} else{
mydf_all =
lapply(1:length(myfiles), function(i){
preprocess(myfiles[i])
})%>% bind_rows
}
#######################
# plot timecourse
#######################
### assemble all the csv files
myfiles = list.files(path=mypath, pattern='.csv$')
myfiles = paste0(mypath, myfiles[-grep('CALIB',myfiles)])
mydf_all = NULL
if(parallel){
cl = makeCluster(numCores, type="FORK")
registerDoParallel(cl)
mydf_all =
foreach(i=1:length(myfiles), .export=ls(.GlobalEnv)) %dopar% {
print(i)
preprocess(myfiles[i])
}
stopCluster(cl)
mydf_all = do.call("rbind", mydf_all)
} else{
mydf_all =
lapply(1:length(myfiles), function(i){
preprocess(myfiles[i])
})%>% bind_rows
}
parallel = F
mydf_all = NULL
if(parallel){
cl = makeCluster(numCores, type="FORK")
registerDoParallel(cl)
mydf_all =
foreach(i=1:length(myfiles), .export=ls(.GlobalEnv)) %dopar% {
print(i)
preprocess(myfiles[i])
}
stopCluster(cl)
mydf_all = do.call("rbind", mydf_all)
} else{
mydf_all =
lapply(1:length(myfiles), function(i){
preprocess(myfiles[i])
})%>% bind_rows
}
result_all = calcIndices(mydf_all)
ggplot(result_all, aes(genotype, attractionIndex, color=genotype)) +
theme_classic() +
theme(legend.position='None') +
geom_hline(yintercept = c(0,1), lty=1, color='black', lwd=.5) +
geom_hline(yintercept = 0.5, lty=3, color='black', lwd=.5) +
geom_boxplot(alpha=.4, outlier.shape = NA) +
scale_color_manual(values=c('gray40','red')) +
ylim(values=c(0,1))
str(result_all)
ggplot(result_all, aes(genotype, attractionIndex, color=genotype)) +
theme_classic() +
theme(legend.position='None') +
scale_y_continuous(expand = c(0, 0), limits = c(0, 1)) +
scale_color_manual(values=c('CS'='black')) +
scale_fill_manual(values=c('CS'='black')) +
geom_hline(yintercept=.5, lty=2) +
geom_boxplot(alpha=.3) +
geom_point()
ggplot(result_all, aes(genotype, attractionIndex, color=genotype, fill=genotype)) +
theme_classic() +
theme(legend.position='None') +
scale_y_continuous(expand = c(0, 0), limits = c(0, 1)) +
scale_color_manual(values=c('CS'='black')) +
scale_fill_manual(values=c('CS'='black')) +
geom_hline(yintercept=.5, lty=2) +
geom_boxplot(alpha=.3) +
geom_point()
ggsave(paste0(mydir, 'attractionIndex3.png'), height=3, width=1.25, dpi=300)
mydir
ggsave(paste0('attractionIndex3.png'), height=3, width=1.25, dpi=300)
write.csv(result_all, 'result_all.csv', row.names = F)
